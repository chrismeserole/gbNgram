% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngram_group.R
\name{ngram_group}
\alias{ngram_group}
\title{Get Google Books Ngram Data By Group}
\usage{
ngram_group(terms, qualifiers, yr.start = 1800, yr.end = 2000,
  group.by = 1, smoothing = 0, include.plurals = F,
  include.all.cases = F, save.data = F, data.path = NULL,
  f.overwrite = F, corpus = 15, verbose = F)
}
\arguments{
\item{terms}{Terms to query against the Google Books corpus. Typically a vector.}

\item{qualifiers}{A set of terms, typically qualifiersectives, that will precede each element in `terms`.}

\item{yr.start}{The first year to query. Defaults to 1800.}

\item{yr.end}{The last year to query. Defaults to 2008.}

\item{group.by}{Whether to group results by `terms` (1) or `qualifiers` (2). Defaults to 1.}

\item{smoothing}{The number of years to smooth over. Defaults to 0.}

\item{include.plurals}{Boolean that indicates whether to also include naive plurals in the query terms. Defaults to FALSE. If TRUE, expands `terms` to also include a duplicate of each element, but with an `s` added.}

\item{include.all.cases}{Boolean that indicates whether to query each term twice, once with first letter capitalized and once with it uncapitalized. Defaults to FALSE.}

\item{save.data}{Boolean that captures whether to save data to disk. Defaults to FALSE If searching/analysing a large number of terms, this will save a lot of time.}

\item{data.path}{The path to save data to. Defaults to current working directory.}

\item{f.overwrite}{Boolean that captures whether to overwrite save files. Useful if you use the same terms, but change the year range. Defaults to FALSE.}

\item{corpus}{The corpus to query. Defaults to 15, which corresponds to the English language corpus.}

\item{verbose}{Boolean that indicates whether to print internal messages. Defaults to FALSE.}
}
\description{
This function fetches the underlying plot data for Google Books Ngrams for a sequence of related terms.
}
\examples{
library(ggplot2)
library(tidyr)
library(dplyr)

# set query terms
main.terms <- c("soldier", "politician", "writer")
adjs <- c("British", "English")

# plot by term
df <- ngram_group(main.terms, adjs, include.plurals = TRUE)

df.plot <- df \%>\%
  gather(term, frequency, -year)

p <- ggplot(df.plot, aes(year, frequency, colour=term)) + geom_line() +
  ylab("Frequency") +
  xlab("Year") +
  ggtitle("Terms in Google Books, 1800-2000") +
  theme_bw()
p


# group by qualifier
df <- ngram_group(main.terms, adjs, group.by = 2,
                           include.plurals = TRUE)

df.plot <- df \%>\%
 gather(term, frequency, -year)

p <- ggplot(df.plot, aes(year, frequency, colour=term)) + geom_line() +
 ylab("Frequency") +
  xlab("Year") +
  ggtitle("Terms in Google Books, 1800-2000") +
  theme_bw()
p
}
\keyword{ngrams}

